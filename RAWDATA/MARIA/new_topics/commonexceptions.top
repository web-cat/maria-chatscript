concept: ~ae [arithmeticexcpetion "arithmetic exception"]
concept: ~aioobe [arrayindexoutofboundsexception "array index out of bounds exception" "array index out of bounds" arrayindexoutofbounds "index out of bounds" indexoutofbounds "array bounds error" "bounds error"]
concept: ~sioobe [stringindexoutofboundsexcpetion "string index out of bounds exception" "string index out of bounds" stringindexoutofbounds "string bounds error"]
concept: ~nfe [numberformatexception "number format exception" "number format error" "number format" numberformat]
concept: ~cce [classcastexception "class cast exception" "class cast error" "cast exception" "cast error"]
concept: ~iae [illegalargumentexception "illegal argument" "illegal argument exception" "illegal argument error" illegalargument]
concept: ~ise [illegalstateexception "illegal state" "illegal state exception" "illegal state error" illegalstate]

topic: ~commonexceptions keep repeat [what why exception error]

#! what causes an arithmetic excpetion
#! what causes the arithmeticexcpetion
#! why did i get an arithmetic exception
#! why did the arithmeticexcpetion happen
#! what is an ArithmeticException
#! what is an arithmetic exception
#! what does arithmetic exception mean
u: A_EXP ([what why when how] * ~ae)
In Java, the most common cause of the ArithmeticExcpetion is trying to divide by zero. Make sure you're not dividing by zero!
<ul id="choices">
<li>I'm not dividing by zero!</li>
<li>Show me the documentation!</li>
</ul>
	a: (not dividing by zero)
	Make sure none of the variables you're diving by can be zero. For example, the following code will cause an error because <code>i</code> is zero at some point!
	<div class="mlcode">
	for (int i = 0; i < 10; i++)
	{
	&emsp;System.out.println(10.0 / i);
	}
	</div>
	
	a: (documentation)
	\<atarget="_blank" href="https://docs.oracle.com/javase/8/docs/api/java/lang/ArithmeticException.html">Official Java Documentation on the ArithmeticException</a>
	
	
#! what causes an array index out of bounds exception
#! what causes the arrayindexoutofboundsexception
#! why did i get an array index out of bounds
#! why did the arrayindexoutofboundsexception happen
#! what is an arrayindexoutofboundsexception
#! what is an array index out of bounds exception
#! what does array index out of bounds mean
u: AIOOB_EXP ([what why when how] * ~aioobe)
The ArrayIndexOutOfBoundsException happens when you try to access an array at an index that doesn't exist in the array. This can happen if the index you try to access is too big or too small. If you create an array like <code>int[] array = new int[10]</code>, then saying <code>array[-1] = 1</code> or <code>array[11] = 1</code> will give you an error because the array is indexed from 0 to 9. If you are accessing the array in a for loop, make sure you aren't using a <= instead of <.
<ul id="choices">
<li>What are the valid indices of an array?</li>
<li>Show me the documentation!</li>
<li>Tell me more!</li>
</ul>
	a: (what are valid indices of an array)
	The valid indices of an array are all the whole numbers from 0 to the length of the array minus 1. For example, if I make an array <code>int[] array = new int[n]</code>, the valid indices are all the whole numbers from 0 to n-1.
	
	a: (documentation)
	\<atarget="_blank" href="https://docs.oracle.com/javase/8/docs/api/java/lang/ArrayIndexOutOfBoundsException.html">Official Java Documentation on the ArrayIndexOutOfBoundsException</a>
	
	a: (tell me more)
	You can see more info on common array problems <a class="jgloss" target="_blank" href="http://mindprod.com/jgloss/array.html#ARRAYINITGOTCHAS">here</a>!
	
	
#! what causes an string index out of bounds exception
#! what causes the stringindexoutofboundsexception
#! why did i get an string index out of bounds
#! why did the stringindexoutofboundsexception happen
#! what is an stringindexoutofboundsexception
#! what is an string index out of bounds exception
#! what does string index out of bounds mean
u: SIOOB_EXP ([what why when how] * ~sioobe)
The StringIndexOutOfBoundsException happens when you try to use an index of  string that does not exist. For example, if I have <code>String str = "012";</code>, then <code>str</code> has a length of 3 and the valid indices are 0, 1, and 2. I can't say <code>str.charAt(3)</code> or <code>str.substring(-1)</code> because the indices 3 and -1 do not exist.
<ul id="choices">
<li>Show me the documentation!</li>
<li>How do I use the substring() method?</li>
</ul>
	a: (documentation)
	\<atarget="_blank" href="https://docs.oracle.com/javase/8/docs/api/java/lang/StringIndexOutOfBoundsException.html">Official Java Documentation on the StringIndexOutOfBoundsException</a>
	
	a: (substring)
	^reuse(~string.SUBSTRING)


u: NF_EXP ([what why when how] * ~nfe)
The NumberFormatException happens when you try to convert a string to a number, but the string isn't a valid number! For example, if you have <code>String str = "12p"</code> and you try to call <code>Integer.parseInt(str)</code>, you'll get a NumberFormatException because <code>"12p"</code> is not a number. You also can't have any spaces or commas in your number!
<ul id="choices">
<li>Show me the documentation!</li>
</ul>
	a: (documentation)
	\<atarget="_blank" href="https://docs.oracle.com/javase/8/docs/api/java/lang/NumberFormatException.html">Official Java Documentation on the NumberFormatException</a>
	

u: CC_EXP ([what why when how] * ~cce)
The ClassCastException happens when you try to cast an object to a class that it's not an instance of. Make sure the object you are trying to cast is actually the type you think it is. 
<ul id="choices">
<li>Show me the documentation!</li>
<li>Tell me more!</li>
</ul>
	a: (documentation)
	\<atarget="_blank" href="https://docs.oracle.com/javase/8/docs/api/java/lang/ClassCastException.html">Official Java Documentation on the ClassCastException</a>
	
	a: (tell me more)
	\<ul><li>You have cast a <span class="class">Class</span> object to a <span class="class">Class</span> that is not the same class or a super class of the <span class="class">Class</span> object. This exception happens when you cast a generic reference to an <span class="interface">Object</span> to an invalid class. You must cast it to the class of the <span class="interface">Object</span> or one of its superclasses. You can find out what class the <span class="interface">Object</span> actually is with <span class="method">getClass</span> \(\).<span class="method">toString</span> \(\).</li> <li>You can cast null into anything without raising a <span class="interface">ClassCastException</span>. Generally, this is a Good Thingâ„¢. Otherwise every cast would need an <span class="java">if</span> to specially handle the null case. You might be tempted to count on <span class="interface">ClassCastException</span>s to filter out nulls for you. The following code will <strong>not</strong> raise a <span class="package">java.lang</span>. <span class="interface"> ClassCastException</span>: <!-- macro JDisplay classcastexception.example1.javafrag --><!-- generated --><pre class="java"><span class="class">Cat </span><span class="vardef">c </span><span class="op">= </span><span class="k">null</span><span class="sc">;</span> <span class="class">Object </span><span class="vardef">o </span><span class="op">= </span><span class="var">c</span><span class="sc">;</span> <span class="class">Dalmatian </span><span class="vardef">d </span><span class="op">= </span><span class="fence1"> \(</span><span class="class">Dalmatian</span><span class="fence1"> \)</span><span class="var">o</span><span class="sc">;</span></pre><!-- /generated by JDisplay --> <p>In other words, there is one universal representation for <span class="k">null</span>, not a special one for each class. For more detail see <a class="jgloss" target="_blank" href="http://mindprod.com/jgloss/gotchas.html#CASTS">gotchas</a>.</p></li> <li>If the error message complains you have tried to cast class <span class="class">X</span> to class <span class="class">X</span>, it is complaining that the two different class <span class="class">X</span>es belong to different class loaders. Even though they have the same name, they are treated like logically separate classes.</li> <li>If the <span class="class">ClassCastException</span> occurs during a sort, chances are you forgot the <span class="k">implements</span> <span class="interface">Comparable</span>. See the <a class="jgloss" target="_blank" href="http://mindprod.com/jgloss/gotchas.html#CASTS">gotchas</a> for details.</li> <li>If you write a factory method like this: <!-- macro JDisplay errormessages.example3.javafrag --><!-- generated --><pre class="java"><span class="commentslashslash">// typical factory method, that overrides a similar method in the base class</span> <span class="k">protected </span><span class="class">CameraButton </span><span class="methoddef">cameraButtonFactory </span><span class="fence1"> \(</span> <span class="k">int </span><span class="vardef">buttonNumber </span><span class="fence1"> \)</span> <span class="fence1"> \{</span> <span class="ik">return </span><span class="k">new </span><span class="class">LabelledCameraButton </span><span class="fence1"> \(</span> <span class="var">buttonNumber</span><span class="op">, </span><span class="k">this </span><span class="fence1"> \)</span><span class="sc">;</span> <span class="fence1"> \}</span></pre><!-- /generated by JDisplay --> <p>and it seems to be producing the wrong kind of objects - ones from the base class's version of the method, check the precise spelling and signature of the method. It had better exactly match the one in the base class. If it does not exactly match, it will not override. To guard against this error <a class="jgloss" target="_blank" href="http://mindprod.com/jgloss/bali.html#OVERRIDE">Bali</a> proposes an explicit <span class="k">overrides</span> keyword.</p></li></ul>
	 

u: IA_EXP ([what why when how] * ~iae)
The IllegalArgumentException happens when you try to pass a method a bad argument. A number may be out of bounds or a string may not have the format the method expected. You should Google the method you are trying to use or look at exception message you are getting to see what specifically went wrong in your case.
<ul id="choices">
<li>Show me the documentation!</li>
</ul>
	a: (documentation)
	\<atarget="_blank" href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalArgumentException.html">Official Java Documentation on the IllegalArgumentException</a>
	

u: IS_EXP ([what why when how] * ~ise)
The IllegalStateException happens when you try to call a method the object didn't expect. For example, if you call <code>remove()</code> before you call <code>next()</code> on an iterator. This excpetion can happen for a lot of other reasons, too. You should Google the method/class you're using or look at the excpetion message you got for more specific information.
<ul id="choices">
<li>Show me the documentation!</li>
</ul>
	a: (documentation)
	\<atarget="_blank" href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalArgumentException.html">Official Java Documentation on the IllegalArgumentException</a>